<?php

/**
 * Implements hook_add_to_vejviser (@see bibdk_vejviser.module)
 **/
function bibdk_favourite_add_to_vejviser($branch) {
  $ret = drupal_get_form('bibdk_favourite_select_form',$branch);
  return drupal_render($ret);
}


function bibdk_favourite_select_form($form,$form_state) {
  $form['favourite_button'] = array(
    '#type'=>'submit',
    '#value'=>t('TilfÃ¸j til favoritbiblioteker'),
    '#ajax' => array(
      'callback' => 'bibdk_favourite_ajax_add_favourite',
    ),
  );

  return $form;
}

/**
 * Ajax callback function
 * add favourite to session
 * set a message
 **/
function bibdk_favourite_ajax_add_favourite($form, $form_state) {
  $branch = $form_state['build_info']['args'][0];
  bibdk_favourite_add_favourite_to_session ($branch);

  // insert a drupal messagebox on branch (class="message_$branchId")
  $bibname = $_SESSION['bibdk_favourites'][$branch->branchId]->branchName;
  $text = t('@bibname has been added to your favourite libraries',array('@bibname'=>$bibname));
  $commands = array();
  $selector = '.messages_'.$branch->branchId;
  drupal_set_message($text);
  $commands[] = ajax_command_replace($selector, theme('status_messages'));

  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Add favourite library to sesssion
 **/
function bibdk_favourite_add_favourite_to_session ($branch) {
  if (!isset($_SESSION)) {
    drupal_session_initialize();
    $_SESSION['bibdk_favourites'] = array();
  }

  // @TODO; save on webservice
  $_SESSION['bibdk_favourites'][$branch->branchId]=$branch;
}


function bibdk_favourite_delete_favourite_from_session ($branchId) {
  if( isset($_SESSION['bibdk_favourites'][$branchId]) ) {
    unset($_SESSION['bibdk_favourites'][$branchId]);
  }

  // @TODO; delete on webservice
}

/**
 * Implememts hook_user_profile_tabs (@see ding_user.module)
 **/
function bibdk_favourite_user_profile2_tabs () {
  $ret->label = t('favourites');
  $ret->form = 'bibdk_favourite_form_view_items_from_session';
  $ret->type = 'bibdk_favourite_list';

  return $ret;
}

/**
 * the form to be displayed on profile tab
 **/
function bibdk_favourite_form_view_items_from_session($form, &$form_state) {
  $agencies = isset($_SESSION['bibdk_favourites']) ?
    $_SESSION['bibdk_favourites'] : NULL;

  if( empty($agencies) ) {
    return;
  }

  foreach ( $agencies as $id => $branch )  {
    $form[$branch->branchId] = bibdk_favourite_form_element($branch);
    // give each branch a unique class for ajax-handling
    $form[$branch->branchId]['#prefix'] = '<div class="favourite_'.$branch->branchId.'">';
    $form[$branch->branchId]['#suffix'] = '</div>';
  }

  return $form;
}

/**
 * return a single form element
 **/
function bibdk_favourite_form_element ($branch) {
  $element = array(
    'agency' => array(
      '#markup'=>$branch->branchName,
    ),
    'submit' => array(
      '#name' => 'delete_'.$branch->branchId,
      '#type'=>'submit',
      '#value'=>t('Slet'),
      '#ajax' => array(
        'callback' => 'bibdk_favourite_ajax_delete_favourite',
        ),
    ),
    'branchid' => array(
      '#type'=>'hidden',
      '#value'=>$branch->branchId,
    ),
    'branchname' => array(
      '#type'=>'hidden',
      '#value'=>$branch->branchName,
    ),
  );
  return $element;
}

/**
 * ajax callback for deleting a favourite library
 **/
function bibdk_favourite_ajax_delete_favourite($form,$form_state) {
  // get the id from the submit button
  $but = isset ($form_state['input']['_triggering_element_name']) ?
    $form_state['input']['_triggering_element_name'] : NULL;

  if( !isset($but) ) {
    // @TODO; errorhandling
    return;
  }

  $parts = explode('_',$but);
  $branchid = $parts[1];
  // delete from session
  bibdk_favourite_delete_favourite_from_session($branchid);

  $commands = array();
  $selector = '.favourite_'.$branchid;
  $text = t('Favourite library has been deleted');
  // clear message stack
  drupal_get_messages();
  // set message
  drupal_set_message($text);
  $commands[] = ajax_command_replace($selector, theme('status_messages'));

  return array('#type' => 'ajax', '#commands' => $commands);
}





